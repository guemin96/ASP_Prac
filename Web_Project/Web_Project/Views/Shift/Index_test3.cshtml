@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using System.Data
@using Web_Project.Models
@{
    var dtTemp = ViewBag.dtTemp as DataTable;
    var dtReal = ViewBag.dtReal as DataTable;
    var dtDate = ViewBag.dtDate as DataTable;
    List<int> Chk1_F = new List<int> { 1, 10, 18, 25, 35, 39 };

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/pikaday/css/pikaday.css">
    <script src="https://cdn.jsdelivr.net/npm/pikaday/pikaday.js"></script>
    <style>
        tr {
            text-align: center;
        }
        

        .TitleBody {
            text-align: left;
        }
    </style>
</head>
<body>
    <form asp-controller="Shift" asp-action="Index" method="get">
        <input type="text" id="datepicker" name="Date" autocomplete="off" readonly />
        <input type="submit" value="조회" />
    </form>

    <script src="pikaday.js"></script>
    <script>
        var picker = new Pikaday({
            field: document.getElementById('datepicker'),
            format: 'YYYY/MM/DD',
            minDate: new Date(2000, 0, 1),
            maxDate: new Date(2030, 12, 31),
            yearRange: [2000, 2030],
            toString(date, format) {
                // you should do formatting based on the passed format,
                // but we will just return 'D/M/YYYY' for simplicity
                const day = date.getDate();
                const month = date.getMonth() + 1;
                const year = date.getFullYear();
                return `${year}/${month}/${day}`;
            }
            //,
            //parse(dateString, format) {
            //    // dateString is the result of `toString` method
            //    const parts = dateString.split('/');
            //    const year = parseInt(parts[0], 10);
            //    const month = parseInt(parts[1], 10) - 1;
            //    const day = parseInt(parts[1], 10);

            //    return new Date(year, month, day);
            //}
        });
    </script>
    <table border="1">
        <thead>
            <tr>
                <th colspan="3" rowspan="3">항목</th>
                <th width="9%">월</th>
                <th width="9%">화</th>
                <th width="9%">수</th>
                <th width="9%">목</th>
                <th width="9%">금</th>
                <th width="9%">토</th>
                <th width="9%">일</th>
            </tr>
            <tr>
                @foreach (DataRow item in dtDate.Rows) {
                    <th>@DateTime.ParseExact( @item["Date"].ToString(),"yyyyMMdd",null).ToShortDateString() </th>
                }  
            </tr>
            
        </thead>
        <tbody>
            @foreach (DataRow item in dtTemp.Rows) {
                if (item["CheckTypeID"].ToString() == "4") {
                    <tr>
                        @{
                            var DataList = dtReal.AsEnumerable().Where(x => x.Field<Int64>("ItemSeq").ToString() == item[1].ToString()).CopyToDataTable();
                        }
                        <th class="TitleBody">@item["ItemSeq"]</th>
                        <th class="TitleBody">@item["CheckBody"]</th>
                        @for (int i = 0; i < 7; i++) {
                            <th style="font-size:12px">
                                @DataList.Rows[i][7]'℃
                                /
                                @DataList.Rows[i][8]%
                            </th>
                        }
                    </tr>
                }
                else if (item["CheckTypeID"].ToString() == "3") {
                    <tr>
                        @{
                            var DataList = dtReal.AsEnumerable().Where(x => x.Field<Int64>("ItemSeq").ToString() == item[1].ToString()).CopyToDataTable();
                        }
                        <th class="TitleBody">@item["ItemSeq"]</th>
                        <th class="TitleBody">@item["CheckBody"]</th>
                        @for (int i = 0; i < 7; i++) {
                            <th>
                                @if (DataList.Rows[i][7].Equals("True")) {
                                    <input type="checkbox" id="checkbox" name="checkbox" checked onclick="return false" />
                                }
                                else {
                                    <input type="checkbox" id="checkbox" name="checkbox" onclick="return false" />
                                }
                                @if (DataList.Rows[i][8].Equals("True")) {
                                    <input type="checkbox" id="checkbox" name="checkbox" checked onclick="return false" />
                                }
                                else {
                                    <input type="checkbox" id="checkbox" name="checkbox" onclick="return false" />
                                }
                                @if (DataList.Rows[i][9].Equals("True")) {
                                    <input type="checkbox" id="checkbox" name="checkbox" checked onclick="return false" />
                                }
                                else {
                                    <input type="checkbox" id="checkbox" name="checkbox" onclick="return false" />
                                }

                            </th>
                        }
                    </tr>
                }
                else if (item["CheckTypeID"].ToString() == "2") {
                    <tr>
                        @{
                            var DataList = dtReal.AsEnumerable().Where(x => x.Field<Int64>("ItemSeq").ToString() == item[1].ToString()).CopyToDataTable();
                        }
                        <th class="TitleBody">@item["ItemSeq"]</th>
                        <th class="TitleBody">@item["CheckBody"]</th>
                        @for (int i = 0; i < 7; i++) {
                            <th>
                                @if (DataList.Rows[i][7].Equals("True")) {
                                    <input type="checkbox" id="checkbox" name="checkbox" checked onclick="return false" />
                                }
                                else {
                                    <input type="checkbox" id="checkbox" name="checkbox" onclick="return false" />
                                }
                                @if (DataList.Rows[i][8].Equals("True")) {
                                    <input type="checkbox" id="checkbox" name="checkbox" checked onclick="return false" />
                                }
                                else {
                                    <input type="checkbox" id="checkbox" name="checkbox" onclick="return false" />
                                }
                            </th>
                        }
                    </tr>
                }
                else if (Chk1_F.Contains(Int32.Parse(item[1].ToString()))) {
                    <tr>
                        @{
                            var DataList = dtReal.AsEnumerable().Where(x => x.Field<Int64>("ItemSeq").ToString() == item[1].ToString()).CopyToDataTable();
                        }
                        @if (item[1].ToString() == "1") {
                            <th  rowspan="9">기본</th>
                        }
                        else if (item[1].ToString() == "10") {
                            <th rowspan="8">1번랙</th>
                        }
                        else if (item[1].ToString() == "18") {
                            <th rowspan="7">2번랙</th>
                        }
                        else if (item[1].ToString() == "25") {
                            <th rowspan="10">통신랙</th>
                        }
                        else if (item[1].ToString() == "35") {
                            <th rowspan="4">3번랙</th>
                        }
                        else if (item[1].ToString() == "39") {
                            <th rowspan="6">메탈랙</th>
                        }
                        <th class="TitleBody">@item["ItemSeq"]</th>
                        <th class="TitleBody">@item["CheckBody"]</th>
                        @for (int i = 0; i < 7; i++) {
                            <th>
                                @if (DataList.Rows[i][7].Equals("True")) {
                                    <input type="checkbox" name="checkbox" checked readonly onclick="return false" />
                                }
                                else {
                                    <input type="checkbox" name="checkbox" readonly onclick="return false" />
                                }
                            </th>
                        }
                    </tr>
                }
                else {
                    <tr>
                        @{
                            var DataList = dtReal.AsEnumerable().Where(x => x.Field<Int64>("ItemSeq").ToString() == item[1].ToString()).CopyToDataTable();
                        }
                        <th class="TitleBody">@item["ItemSeq"]</th>
                        <th class="TitleBody">@item["CheckBody"]</th>
                        @for (int i = 0; i < 7; i++) {
                            <th>
                                @if (DataList.Rows[i][7].Equals("True")) {
                                    <input type="checkbox" id="checkbox" name="checkbox" checked onclick="return false" />
                                }
                                else {
                                    <input type="checkbox" id="checkbox" name="checkbox" onclick="return false" />
                                }
                            </th>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
    



</body>
</html>